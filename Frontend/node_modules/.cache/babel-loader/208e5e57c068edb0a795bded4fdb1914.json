{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\kirst\\\\Desktop\\\\JumpPlus\\\\LanguageLearning\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\kirst\\\\Desktop\\\\JumpPlus\\\\LanguageLearning\\\\Frontend\\\\src\\\\AuthContext.js\";\n// AuthContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nvar AuthContext = createContext();\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoggedIn = _useState2[0],\n    setIsLoggedIn = _useState2[1];\n  useEffect(function () {\n    // Check the login status when the app loads\n    axios.get('http://localhost:5001/check-login').then(function (response) {\n      setIsLoggedIn(response.data.logged_in);\n    }).catch(function (error) {\n      console.error('Error checking login status:', error);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      setIsLoggedIn: setIsLoggedIn\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport var useAuth = function useAuth() {\n  return useContext(AuthContext);\n};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","AuthContext","AuthProvider","_ref","children","_useState","_useState2","_slicedToArray","isLoggedIn","setIsLoggedIn","get","then","response","data","logged_in","catch","error","console","createElement","Provider","value","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","useAuth"],"sources":["C:/Users/kirst/Desktop/JumpPlus/LanguageLearning/Frontend/src/AuthContext.js"],"sourcesContent":["// AuthContext.js\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check the login status when the app loads\r\n    axios.get('http://localhost:5001/check-login')\r\n      .then(response => {\r\n        setIsLoggedIn(response.data.logged_in);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error checking login status:', error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isLoggedIn, setIsLoggedIn }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;AAEzB,IAAMC,WAAW,GAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,IAAMM,YAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAAA,IAAAC,SAAA,GACDP,QAAQ,CAAC,KAAK,CAAC;IAAAQ,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5CG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAEhCP,SAAS,CAAC,YAAM;IACd;IACAC,KAAK,CAACU,GAAG,CAAC,mCAAmC,CAAC,CAC3CC,IAAI,CAAC,UAAAC,QAAQ,EAAI;MAChBH,aAAa,CAACG,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;IACxC,CAAC,CAAC,CACDC,KAAK,CAAC,UAAAC,KAAK,EAAI;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACErB,KAAA,CAAAuB,aAAA,CAACjB,WAAW,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEZ,UAAU,EAAVA,UAAU;MAAEC,aAAa,EAAbA;IAAc,CAAE;IAAAY,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACxDvB,QACmB,CAAC;AAE3B,CAAC;AAED,OAAO,IAAMwB,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EAC3B,OAAO/B,UAAU,CAACI,WAAW,CAAC;AAChC,CAAC"},"metadata":{},"sourceType":"module"}